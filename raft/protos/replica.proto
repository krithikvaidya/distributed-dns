syntax = "proto3";

package protos;

option go_package = "github.com/krithikvaidya/distributed-dns/replicated_kv_store/protos";

message RequestVoteMessage {

    int32 term = 1;
    int32 candidateId = 2;
    int32 lastLogIndex = 3;
    int32 lastLogTerm = 4;

}

message RequestVoteResponse {

    int32 term = 1;
    bool voteGranted = 2;

}

/*
 * This is a format for representing a single log
 * entry. Each log entry contains the value, and the
 * term number, when it was added to the leader's log,
 * and an identifier for the client that made the request.
 */
message LogEntry {

    int32 term = 1;
    repeated string operation = 2;  // [POST/PUT/DELETE/NO-OP] [<id, optional>] [<value, optional>]
    string clientid = 3; // track which client made this entry
}

message AppendEntriesMessage {

    int32 term = 1;
    int32 leaderId = 2;

    int32 prevLogIndex = 3;
    int32 prevLogTerm = 4;
    
    int32 leaderCommit = 5;

    repeated LogEntry entries = 6;

    string leaderAddr = 7;

    string latestClient = 8;
}

message AppendEntriesResponse {

    int32 term = 1;
    bool success = 2;

}

service ConsensusService {

  rpc RequestVote(RequestVoteMessage) returns (RequestVoteResponse) {}
  rpc AppendEntries(AppendEntriesMessage) returns (AppendEntriesResponse) {}

}